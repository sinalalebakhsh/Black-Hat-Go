As an example, save the following code under a project
directory within $GOPATH/src (remember, you created this
workspace during installation) as main.go:
package main
import (
"fmt"
)
func main() {
fmt.Println("Hello, Black Hat Gophers!")
}

----
Note that go run executed your file, but it didn't produce a standalone binary file.
توجه داشته باشید که گو ران فایل شما را اجرا میکنه ، ولی یک فایل باینری جداگانه تولید نمیکنه.

----
To reduce the file size, you can include additional flags during 
the build process to strip this information from the binary.
برای کاهش اندازه فایل، می‌توانید پرچم‌های اضافی را در طول فرآیند ساخت اضافه کنید
تا این اطلاعات را از باینری حذف کنید.

----
For example, the following command will reduce the binary size by approximately 30 percent:
به عنوان مثال، دستور زیر اندازه باینری را تقریباً 30 درصد کاهش می دهد:

----
To cross-compile, you need to set a constraint
برای کامپایل متقابل، باید یک محدودیت تعیین کنید

----
Although Go developers traditionally install dependencies with go get, 
problems can arise if those dependent packages receive updates that break backward compatibility. 
Go has introduced two separate tools—dep and mod—to lock.
اگرچه توسعه‌دهندگان Go به طور سنتی وابستگی‌ها را با go get نصب می‌کنند،
 اما اگر بسته‌های وابسته به‌روزرسانی‌هایی را دریافت کنند که سازگاری با گذشته را از بین می‌برند، ممکن است مشکلاتی ایجاد شود
. Go دو ابزار جداگانه-dep و mod- را برای قفل معرفی کرده است.

----
Adhering to arbitrary styling preferences might seem strange at first, 
particularly if they differ from your habits.
پیروی از ترجیحات ظاهری دلخواه ممکن است در ابتدا عجیب به نظر برسد،
 به خصوص اگر با عادات شما متفاوت باشد.